<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 자바 클래스에서 설정한 어노테이션을 여기서 사용할 수 있도록 설정 -->
	<annotation-driven />

	<!-- /resources로 시작하는 경로를 사용하면 resources 디렉토리에서 찾도록 하는 설정 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 중요!!!! Controller에서 포워딩할 페이지의 실제 경로를 설정하는 옵션-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 이 경로(value="/WEB-INF/views/")를 앞에 추가(name="prefix") -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<!-- value=".jsp"를 뒤에(name="suffix") 추가  -->
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 이 패키지 안에 있는 클래스들 중에서 @Controller, @Service, @Repository, @Component가 
	붙은 클래스는 bean을 자동으로 생성한다 따라서 HomeController 보면 위에 @Controller가 붙어있어서 자동으로 bean이 생성됨 -->
	<context:component-scan base-package="com.test.test" />
	
</beans:beans>
